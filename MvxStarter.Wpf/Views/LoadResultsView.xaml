<views:MvxWpfView 
    xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
    xmlns:mvx="clr-namespace:MvvmCross.Platforms.Wpf.Binding;assembly=MvvmCross.Platforms.Wpf"
    x:Class="MvxStarter.Wpf.Views.LoadResultsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MvxStarter.Wpf.Views"
             xmlns:ScottPlot="clr-namespace:ScottPlot;assembly=ScottPlot.WPF"
             xmlns:viewmodels="clr-namespace:MvxStarter.Core.ViewModels;assembly=MvxStarter.Core"
             d:DataContext="{d:DesignInstance Type={x:Type viewmodels:LoadResultsViewModel}}"
             mc:Ignorable="d" Height="720" Width="494">
    <Border Background="#272537" CornerRadius="20" Height="716" VerticalAlignment="Center">
        <Grid Margin="0,0,10,24">
            <TabControl Background="#FF17161F" SelectedIndex="{Binding TabControlSelectedIndex}"
                TabStripPlacement="Top" BorderBrush="#272537" Margin="10,19,0,0" HorizontalAlignment="Left" Width="474">

                <TabControl.Resources>
                    <Style x:Key="FocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
                        <GradientStop Color="#F0F0F0" Offset="0.0"/>
                        <GradientStop Color="#E5E5E5" Offset="1.0"/>
                    </LinearGradientBrush>
                    <SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC"/>
                    <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
                        <GradientStop Color="#FFC3B483" Offset="0.0"/>
                        <GradientStop Color="#FFC3B483" Offset="1.0"/>
                    </LinearGradientBrush>
                    <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA"/>
                    <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
                    <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
                    <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
                    <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFD6C073"/>
                </TabControl.Resources>

                <TabControl.ItemContainerStyle>
                    <Style TargetType="{x:Type TabItem}">
                        <!--<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />-->
                        <Setter Property="Background" Value="#FF1E2652"/>
                        <Setter Property="Height" Value="20"/>

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabItem}">
                                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                        <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
                                            <Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="1,1,1,0" Background="{StaticResource TabItem.Selected.Background}" Margin="-1" Opacity="0"/>
                                        </Border>
                                        <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                            <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.ItemContainerStyle>

                <TabItem Header="Numerical results" Foreground="White">
                    <Grid Background="#FF17161F" Margin="5,0,-5,0" Height="631">
                        <Grid.RowDefinitions>
                            <RowDefinition  Height="25"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="160"/>
                            <RowDefinition Height="160"/>
                            <RowDefinition Height="160"/>
                            <RowDefinition Height="100"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="165" />
                            <ColumnDefinition Width="165" />
                            <ColumnDefinition Width="165" />
                        </Grid.ColumnDefinitions>

                        <!--Iterations-->
                        <Label Grid.Row="0" Grid.Column="0" Content="Iterations:" HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Foreground="White"/>
                        <TextBox Grid.Row="1" Grid.Column="0" IsEnabled="False" Text="{Binding IterationCompleted, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150" Height="25" >
                            <TextBox.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="3"/>
                                </Style>
                            </TextBox.Resources>
                        </TextBox>

                        <!--Execution Time-->
                        <Label Grid.Row="0" Grid.Column="1" Content="Execution Time:" HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Foreground="White"/>
                        <TextBox Grid.Row="1" Grid.Column="1" IsEnabled="False" Text="{Binding ExecTime, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150" Height="25" >
                            <TextBox.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="3"/>
                                </Style>
                            </TextBox.Resources>
                        </TextBox>

                        <!--Elapsed Group Box-->
                        <GroupBox Margin="0 10" Header="Elapsed Time (Seconds)" Grid.Row="2" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="2" Background="#FF17161F" BorderBrush="#FF17161F" BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition  Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="165" />
                                    <ColumnDefinition Width="165" />
                                    <ColumnDefinition Width="165" />
                                </Grid.ColumnDefinitions>

                                <!--Elapsed time-->
                                <Label Grid.Row="0" Grid.Column="0" Content="Elapsed Time (Total):" HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Foreground="White"/>
                                <TextBox Grid.Row="1" Grid.Column="0" IsEnabled="False" Text="{Binding ElapsedTimeTotal, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150" Height="25" >
                                    <TextBox.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </TextBox.Resources>
                                </TextBox>

                                <!--Elapsed time avg-->
                                <Label Grid.Row="0" Grid.Column="1" Content="Elapsed Time (Average):" HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Foreground="White"/>
                                <TextBox Grid.Row="1" Grid.Column="1" IsEnabled="False" Text="{Binding ElapsedTimeAvg, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150" Height="25" >
                                    <TextBox.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </TextBox.Resources>
                                </TextBox>

                                <!--Elapsed time median-->
                                <Label Grid.Row="2" Grid.Column="0" Content="Elapsed Time (Median):" HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Foreground="White"/>
                                <TextBox Grid.Row="3" Grid.Column="0" IsEnabled="False" Text="{Binding ElapsedTimeMod, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150" Height="25" >
                                    <TextBox.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </TextBox.Resources>
                                </TextBox>

                                <!--Elapsed time std.dev-->
                                <Label Grid.Row="2" Grid.Column="1" Content="Elapsed Time (Std.dev):" HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Foreground="White"/>
                                <TextBox Grid.Row="3" Grid.Column="1" IsEnabled="False" Text="{Binding ElapsedTimeStdDev, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150" Height="25" >
                                    <TextBox.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </TextBox.Resources>
                                </TextBox>
                            </Grid>
                        </GroupBox>

                        <!--CPU Group Box-->
                        <GroupBox Margin="0 10" Header="CPU Time (Seconds)" Grid.Row="3" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="2" Background="#FF17161F" BorderBrush="#FF17161F" BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition  Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="165" />
                                    <ColumnDefinition Width="165" />
                                    <ColumnDefinition Width="165" />
                                </Grid.ColumnDefinitions>

                                <!--CPU time-->
                                <Label Grid.Row="0" Grid.Column="0" Content="CPU Time (Total):" HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Foreground="White"/>
                                <TextBox Grid.Row="1" Grid.Column="0" IsEnabled="False" Text="{Binding CpuTimeTotal, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150" Height="25" >
                                    <TextBox.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </TextBox.Resources>
                                </TextBox>

                                <!--CPU time avg-->
                                <Label Grid.Row="0" Grid.Column="1" Content="CPU Time (Average):" HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Foreground="White"/>
                                <TextBox Grid.Row="1" Grid.Column="1" IsEnabled="False" Text="{Binding CpuTimeAvg, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150" Height="25" >
                                    <TextBox.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </TextBox.Resources>
                                </TextBox>

                                <!--CPU time median-->
                                <Label Grid.Row="2" Grid.Column="0" Content="CPU Time (Median):" HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Foreground="White"/>
                                <TextBox Grid.Row="3" Grid.Column="0" IsEnabled="False" Text="{Binding CpuTimeMod, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150" Height="25" >
                                    <TextBox.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </TextBox.Resources>
                                </TextBox>

                                <!--CPU time std.dev-->
                                <Label Grid.Row="2" Grid.Column="1" Content="CPU Time (Std.dev):" HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Foreground="White"/>
                                <TextBox Grid.Row="3" Grid.Column="1" IsEnabled="False" Text="{Binding CpuTimeStdDev, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150" Height="25" >
                                    <TextBox.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </TextBox.Resources>
                                </TextBox>
                            </Grid>
                        </GroupBox>

                        <!--Logical Reads Group Box-->
                        <GroupBox Margin="0 10" Header="Logical Reads" Grid.Row="4" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="2" Background="#FF17161F" BorderBrush="#FF17161F" BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition  Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="165" />
                                    <ColumnDefinition Width="165" />
                                    <ColumnDefinition Width="165" />
                                </Grid.ColumnDefinitions>

                                <!--Logical Reads-->
                                <Label Grid.Row="0" Grid.Column="0" Content="Logical Reads (Total):" HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Foreground="White"/>
                                <TextBox Grid.Row="1" Grid.Column="0" IsEnabled="False" Text="{Binding LogicalReadsTotal, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150" Height="25" >
                                    <TextBox.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </TextBox.Resources>
                                </TextBox>

                                <!--Logical Reads avg-->
                                <Label Grid.Row="0" Grid.Column="1" Content="Logical Reads (Average):" HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Foreground="White"/>
                                <TextBox Grid.Row="1" Grid.Column="1" IsEnabled="False" Text="{Binding LogicalReadsAvg, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150" Height="25" >
                                    <TextBox.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </TextBox.Resources>
                                </TextBox>

                                <!--Logical Reads median-->
                                <Label Grid.Row="2" Grid.Column="0" Content="Logical Reads (Median):" HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Foreground="White"/>
                                <TextBox Grid.Row="3" Grid.Column="0" IsEnabled="False" Text="{Binding LogicalReadsMod, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150" Height="25" >
                                    <TextBox.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </TextBox.Resources>
                                </TextBox>

                                <!--Logical Reads std.dev-->
                                <Label Grid.Row="2" Grid.Column="1" Content="Logical Reads (Std.dev):" HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Foreground="White"/>
                                <TextBox Grid.Row="3" Grid.Column="1" IsEnabled="False" Text="{Binding LogicalReadsStdDev, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150" Height="25" >
                                    <TextBox.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </TextBox.Resources>
                                </TextBox>
                            </Grid>
                        </GroupBox>
                        <GroupBox Margin="0 10" Header="Errors" Grid.Row="5" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="2" Background="#FF17161F" BorderBrush="#FF17161F" BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition  Height="30"/>
                                    <RowDefinition Height="30"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="155" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <!--Logical Reads std.dev-->
                                <Label Grid.Row="0" Grid.Column="0" Content="Error number:" HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Foreground="White"/>
                                <TextBox Grid.Row="1" Grid.Column="0" IsEnabled="False" Text="{Binding ErrorNumber, Mode=OneWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150" Height="25" >
                                    <TextBox.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </TextBox.Resources>
                                </TextBox>
                                <Button Command="{Binding ViewErrorsCommand}" Content="View" Foreground="White" FontSize="10" Grid.Row="1" Grid.Column="1" Width="30" Height="18" HorizontalAlignment="Left">
                                    <Button.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Background" Value="#FF673AB7"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Border Background="{TemplateBinding Background}" BorderBrush="#272537" BorderThickness="1">
                                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#FF403D50"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Resources>
                                </Button>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </TabItem>
                
                <TabItem Header="Charts" Foreground="White">
                    <Grid Background="#FF17161F">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="210"/>
                            <RowDefinition Height="210"/>
                            <RowDefinition Height="210"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <GroupBox Header="Elapsed Time (Seconds)" Margin="5,5,5,5" Grid.Row="0" BorderBrush="#FF17161F" BorderThickness="1">
                            <Grid>
                                <WpfPlot Name="ElapsedTimePlot" Margin="5 5 5 5" />
                            </Grid>
                        </GroupBox>

                        <GroupBox Header="Cpu Time (Seconds)" Margin="5,5,5,5" Grid.Row="1" BorderBrush="#FF17161F" BorderThickness="1">
                            <Grid>
                                <WpfPlot Name="CpuTimePlot" Margin="5 5 5 5" />
                            </Grid>
                        </GroupBox>

                        <GroupBox Header="Logical Reads" Margin="5,5,5,5" Grid.Row="2" BorderBrush="#FF17161F" BorderThickness="1">
                            <Grid>
                                <WpfPlot Name="LogicalReadsPlot" Margin="5 5 5 5" />
                            </Grid>
                        </GroupBox>
                    </Grid>
                </TabItem>
            </TabControl>

            <Button Command="{Binding CloseWindowCommand}" Content="X" FontSize="15" Foreground="White" HorizontalAlignment="Left" Margin="460,2,0,0" VerticalAlignment="Top" Height="22" Width="18">
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="3"/>
                    </Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#272537"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" BorderBrush="#272537" BorderThickness="1">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FF403D50"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Resources>
            </Button>
        </Grid>
    </Border>
</views:MvxWpfView>
